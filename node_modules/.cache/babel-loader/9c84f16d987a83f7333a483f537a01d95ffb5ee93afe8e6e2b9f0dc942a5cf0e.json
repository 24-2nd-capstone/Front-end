{"ast":null,"code":"var _jsxFileName = \"/Users/garyeong/Front-end/src/components/Slide.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './Slide.css';\nimport slide1 from '../img/slide1.png';\nimport slide2 from '../img/slide2.png';\nimport slide3 from '../img/slide3.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slide2 = () => {\n  _s();\n  const outerRef = useRef(null);\n  const innerListRef = useRef(null);\n  const innersRef = useRef([]);\n  let currentIndex = 0; // 현재 슬라이드 화면 인덱스\n\n  // 이미지와 클래스 이름을 함께 정의\n  const slides = [{\n    src: slide1,\n    className: 'slide1'\n  }, {\n    src: slide2,\n    className: 'slide2'\n  }, {\n    src: slide3,\n    className: 'slide3'\n  }];\n  useEffect(() => {\n    const outer = outerRef.current;\n    const innerList = innerListRef.current;\n    const inners = innersRef.current;\n    if (!outer || !innerList || !inners.length) return;\n\n    // inner의 width를 모두 outer의 width로 설정\n    inners.forEach(inner => {\n      inner.style.width = `${outer.clientWidth}px`;\n    });\n\n    // innerList의 width를 설정\n    innerList.style.width = `${outer.clientWidth * inners.length}px`;\n\n    // 주기적으로 화면 넘기기\n    const interval = setInterval(() => {\n      currentIndex++;\n      currentIndex = currentIndex >= inners.length ? 0 : currentIndex;\n      innerList.style.marginLeft = `-${outer.clientWidth * currentIndex}px`;\n    }, 2000);\n    return () => clearInterval(interval); // 컴포넌트 언마운트 시 interval 해제\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slide\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outer\",\n      ref: outerRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner-list\",\n        ref: innerListRef,\n        children: slides.map(({\n          src,\n          className\n        }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `inner ${className}`,\n          ref: el => innersRef.current[index] = el,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: src,\n            alt: `Slide ${index + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Slide2, \"wPWFwCv5fpwYpRQEywyXyaB5vdA=\");\n_c = Slide2;\nexport default Slide2;\nvar _c;\n$RefreshReg$(_c, \"Slide2\");","map":{"version":3,"names":["React","useEffect","useRef","slide1","slide2","slide3","jsxDEV","_jsxDEV","Slide2","_s","outerRef","innerListRef","innersRef","currentIndex","slides","src","className","outer","current","innerList","inners","length","forEach","inner","style","width","clientWidth","interval","setInterval","marginLeft","clearInterval","children","ref","map","index","el","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/garyeong/Front-end/src/components/Slide.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './Slide.css';\nimport slide1 from '../img/slide1.png';\nimport slide2 from '../img/slide2.png';\nimport slide3 from '../img/slide3.png';\n\nconst Slide2 = () => {\n  const outerRef = useRef(null);\n  const innerListRef = useRef(null);\n  const innersRef = useRef([]);\n  let currentIndex = 0; // 현재 슬라이드 화면 인덱스\n\n  // 이미지와 클래스 이름을 함께 정의\n  const slides = [\n    { src: slide1, className: 'slide1' },\n    { src: slide2, className: 'slide2' },\n    { src: slide3, className: 'slide3' },\n  ];\n\n  useEffect(() => {\n    const outer = outerRef.current;\n    const innerList = innerListRef.current;\n    const inners = innersRef.current;\n\n    if (!outer || !innerList || !inners.length) return;\n\n    // inner의 width를 모두 outer의 width로 설정\n    inners.forEach((inner) => {\n      inner.style.width = `${outer.clientWidth}px`;\n    });\n\n    // innerList의 width를 설정\n    innerList.style.width = `${outer.clientWidth * inners.length}px`;\n\n    // 주기적으로 화면 넘기기\n    const interval = setInterval(() => {\n      currentIndex++;\n      currentIndex = currentIndex >= inners.length ? 0 : currentIndex;\n      innerList.style.marginLeft = `-${outer.clientWidth * currentIndex}px`;\n    }, 2000);\n\n    return () => clearInterval(interval); // 컴포넌트 언마운트 시 interval 해제\n  }, []);\n\n  return (\n    <div className=\"slide\">\n      <div className=\"outer\" ref={outerRef}>\n        <div className=\"inner-list\" ref={innerListRef}>\n          {slides.map(({ src, className }, index) => (\n            <div\n              key={index}\n              className={`inner ${className}`}\n              ref={(el) => (innersRef.current[index] = el)}\n            >\n              <img src={src} alt={`Slide ${index + 1}`} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Slide2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}